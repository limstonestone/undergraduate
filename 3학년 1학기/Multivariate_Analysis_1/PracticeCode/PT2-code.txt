## Practice Time 2 for Multivariate Data Analysis

## Chap 1 : Multivariate Data Analysis

iris<-read.table("irisflower.txt",header=T)
X <- iris[,-1]
head(X)
dim(X)
plot(X[,1:4],pch=as.numeric(as.factor(X$group)), col=as.factor(X$group))
pairs(X[1:4], pch = 21, bg = c("red", "green3", "blue")[unclass(as.factor(X[,5]))])

par(mfrow=c(2,2))
hist(X[,1], main="꽃받침길이")
hist(X[,2], main="꽃받침폭")
hist(X[,3], main="꽃잎길이")
hist(X[,4], main="꽃잎폭")

library(ggplot2)
table(X[,5])
df<- data.frame(
  group = c("setosa", "versicolor", "virginica"),
  value = c(50, 50, 50)
)
bar <- ggplot(df, aes(x="", y=value, fill=group)) + geom_bar(width = 1, stat = "identity")
bar
pie <- bar + coord_polar("y", start=0)
pie

setosa=X[which(X$group=="setosa"),]
versicolor=X[which(X$group=="versicolor"),]
virginica=X[which(X$group=="virginica"),]

win.graph()
plot(setosa[,1:4],col=1)
win.graph()
plot(versicolor[,1:4],col=2)
win.graph()
plot(virginica[,1:4],col=3)

## p.38

## [r-code 1.4.2 irisflower- covcorr.R] ##

XX<-iris[,2:5]
head(XX)

SandR<-array(NA,c(4,4,6))
rownames(SandR)<-colnames(XX)
colnames(SandR)<-colnames(XX)
variation<-matrix(NA,3,4)
rownames(variation)<-c("setosa","versicolor","virginica")
colnames(variation)<-c("detS","trS", "detR","trR")

for(i in 1:3) {
  X<-XX[(50*(i-1)+1):(50*i),]
  
  S<-cov(X)
  R<-cor(X)
  
  detS<-det(S)
  detR<-det(R)
  trS<-sum(diag(S))
  trR<-sum(diag(R))
  
  SandR[,,i*2-1]<-S
  SandR[,,i*2]<-R
  
  variation[i,1]<-detS
  variation[i,2]<-trS
  variation[i,3]<-detR
  variation[i,4]<-trR
}

SandR<-round(SandR,3)
variation<-round(variation,6)
setosa<-list(SandR[,,1],SandR[,,2],variation[1,])
versicolor<-list(SandR[,,3],SandR[,,4],variation[2,])
virginica<-list(SandR[,,5],SandR[,,6],variation[3,])

setosa
versicolor
virginica

# p.41

Data1.1.1<-read.table("3subjects.txt", header=T)
head(Data1.1.1)
dim(Data1.1.1)
X<-as.matrix(Data1.1.1)
class(Data1.1.1); class(X)

n<-nrow(X)
xbar<-t(X)%*%matrix(1,n,1)/n # 평균벡터
I<-diag(n)
J<-matrix(1,n,n)
H<-I-1/n*J                  # 중심화행렬
Y<-H%*%X                 # 중심화 자료행렬
S<-t(Y)%*%Y/(n-1)          # 공분산행렬 
D<-diag(1/sqrt(diag(S)))     # 표준편차행렬의 역수 (1/s_ii)
Z<-Y%*%D                # 표준화자료행렬
colnames(Z)<-colnames(X)
rownames(Z)<-rownames(X)

# xbar<-colMeans(X)
# S<-cov(X)
# scale(X, scale=F) # 중심화자료행렬
# Z<-scale(X, scale=T) # 표준화자료행렬

# 유클리드거리 sqrt ((x1-x2)^2 + (y1-y2)^2) 
dist(X, method="euclidean")
de <- as.matrix(dist(X, method="euclidean"))
de <- as.dist(de)
round(de, 3)


library(rgl)
plot3d(X)
text3d(X[,1],X[,2],X[,3],rownames(X))

dist_1 <- function(x,y){
  if ( length(x) != length(y)){
    print("Can't calculate distance!")
  }
  else{
  n<-length(x)
  distance <-0
  for (i in 1:n){
    temp <- (x[i]-y[i])^2
    distance <- distance + temp
  }
  sqrt(as.numeric(distance))
  }
}

dist_1(X[1,],X[10,])
dist_1(X[1,], X[3,1:2]) # can't calculate!

# 표준화 유클리드거리 
ds <- as.matrix(dist(Z, method="euclidean"))
ds <- as.dist(ds) 
round(ds, 3)

dist_1(Z[1,], Z[10,])

# 마할라노비스거리
library(biotools)
dm <- D2.dist(X,S)
round(sqrt(dm),3)

a <- c(65,85,85)
b <- c(65,80,90)

(a-b)%*%solve(S)%*%(a-b)

a<-X[1,]
b<-X[2,]


# 시티블럭거리(= manhattan distance = L1 distance) 
dc <- as.matrix(dist(X, method="manhattan"))
dc <- as.dist(dc)
round(dc, 3)

dist_3 <- function(x,y){
  if ( length(x) != length(y)){
    print("Can't calculate distance!")
  }
  else{
    n<-length(x)
    distance <-0
    for (i in 1:n){
      temp <- abs(x[i]-y[i])
      distance <- distance + temp
    }
    print(as.numeric(distance))
  }
}

dist_3(a,b)

# iris - distance
data(iris)
setosa = iris[which(iris$Species=='setosa'),-5]
versicolor = iris[which(iris$Species=='versicolor'),-5]
virginica = iris[which(iris$Species=='virginica'),-5]

setosa_centroid=apply(setosa, 2, mean)
versicolor_centroid=apply(versicolor, 2, mean)
virginica_centroid=apply(virginica, 2, mean)

# 1~50 : setosa, 51~100 : versicolor, 101~150 : virginica

# 80th row -> "versicolor"
X = rbind(setosa_centroid,iris[80,-5])
Y = rbind(versicolor_centroid,iris[80,-5])
Z = rbind(virginica_centroid,iris[80,-5])

dist(X,method = "euclidean")
dist(Y,method = "euclidean")
dist(Z,method = "euclidean")

# 5. Cluster analysis (Ward Linkage, p.252)
ward_1 <- hclust(de, method="ward.D")
ward_2 <- hclust(ds, method="ward.D")
ward_3 <- hclust(dm, method="ward.D")
ward_4 <- hclust(dc, method="ward.D")


par(mfrow=c(2,2))
plot(ward_1, main="Euclidean Distance")
plot(ward_2, main="Standardized Euclidean Distance")
plot(ward_3, main="Mahalanobis Distance")
plot(ward_4, main="City Block Distance")

# http://www.sthda.com/english/wiki/ggplot2-pie-chart-quick-start-guide-r-software-and-data-visualization
# https://bookandmed.tistory.com/27

