## Practice Time 3 for Multivariate Data Analysis

## Chap 1 : Multivariate Data Analysis

# Bivariate Normal distribution
# Chisq plot
# Correlation Coefficient Test for Normailty
# MVN tests based on the Skewness and Kurtosis Ststistics

## review
Data1.1.1<-read.table("3subjects.txt", header=T)
head(Data1.1.1)
X<-as.matrix(Data1.1.1)

n<-nrow(X)
xbar<-t(X)%*%matrix(1,n,1)/n # 평균벡터
I<-diag(n)
J<-matrix(1,n,n)
H<-I-1/n*J                  # 중심화행렬
Y<-H%*%X                 # 중심화 자료행렬
S<-t(Y)%*%Y/(n-1)          # 공분산행렬 
D<-diag(1/sqrt(diag(S)))     # 표준편차행렬의 역수 (1/s_ii)
Z<-Y%*%D                # 표준화자료행렬
colnames(Z)<-colnames(X)

# 유클리드거리 sqrt ((x1-x2)^2 + (y1-y2)^2) 
dist(X, method="euclidean")
de <- as.matrix(dist(X, method="euclidean")) # dist형태를 matrix형태로 
de <- as.dist(de) # matrix형태를 dist형태로

# 표준화 유클리드거리 
# Z <- scale(X, scale=T)
dist(Z, method="euclidean")

# 시티블럭거리(= manhattan distance = L1 distance)
dist(X, method="manhattan")

## p.47, 48
## [r-code 1.6.1 BVNpdf.R] ##
BVNpdf <- function(mu1,mu2,sig1,sig2,rho) {
  par(mfrow=c(1,2))
  s12 = sig1*sig2*rho
  s11 = sig1^2
  s22 = sig2^2
  Sig <- matrix(c(s11,s12,s12,s22),ncol=2,nrow=2,byrow=T)
  Sinv <- solve(Sig)
  x1 <- seq(mu1 - 3.5*sig1,mu1+3.5*sig1,len=50)
  fx1 <- seq(-3.5,3.5,len=50)
  x2 <- seq(mu2 - 3.5*sig2,mu2+3.5*sig2,len=50)
  fx2 <- seq(-3.5,3.5,len=50)
  f <- function(x1,x2) {    
    cons <- ((2*pi)*det(Sig)^.5)^{-1}
    cons*exp(-(.5*(1 - rho^2)^{-1})*(x1^2+x2^2-2*rho*x1*x2))
  }
  f <- outer(fx1,fx2,f)
  persp(x1,x2,f,theta = 30, expand=.50)
  title(main="Bivariate Normal pdf")
  contour(x1,x2,f,lty="solid",drawlabels=F)
  title(main="Contour Plot of BVN pdf")
}

BVNpdf(0,0,1,1,0)
BVNpdf(0,0,1,1,0.8) 
BVNpdf(0,0,1,1,-0.8)


## p.60
## [r-code 1.8.1 iris-chisqplot.R] ##
data(iris)      
setosa = iris[1:50, 1:4]  # Iris data only for setosa
#versicolor = iris[51:100, 1:4] # Iris data only for versicolor
#virginica = iris[101:150, 1:4] # Iris data only for virginica 

# Chi-squre Plot for Checking MVN
par(mfrow=c(1,1))
x=setosa
n=dim(x)[1]
p=dim(x)[2]
S=cov(x)
xbar=colMeans(x)
m=mahalanobis(x, xbar, S)
m=sort(m)
id=seq(1, n)
pt=(id-0.5)/n
q=qchisq(pt, p)
plot(q, m, pch="*", xlab="Quantile", ylab="Ordered Squared Distance")
abline(0, 1)

# Correlation Coefficient Test for Normailty
rq=cor(cbind(q, m))[1,2]
rq

## p.62
## [r-code 1.8.2 iris-MVNtest.R] ##
install.packages("MVN")
library("MVN") # for mardia test
iris

# MVN tests based on the Skewness and Kurtosis Ststistics
setosa = iris[1:50, 1:4] # Iris data only for setosa and four variables
versicolor = iris[51:100, 1:4] # Iris data only for versicolor and four variables
virginica = iris[101:150, 1:4] # Iris data only for virginica and four variables

par(mfrow=c(1,3))
result_setosa = mvn(setosa, mvnTest = "mardia", multivariatePlot =  "qq")
result_versicolor = mvn(versicolor, mvnTest = "mardia", multivariatePlot =  "qq")
result_virginica = mvn(virginica, mvnTest = "mardia", multivariatePlot =  "qq")

result_setosa
result_versicolor
result_virginica

#  Another data (klpga)
klpga = read.table("klpga.txt", header=T)
# Chi-squre Plot for Checking MVN
par(mfrow=c(1,1))
x=klpga
n=dim(x)[1]
p=dim(x)[2]
S=cov(x)
xbar=colMeans(x)
m=mahalanobis(x, xbar, S)
m=sort(m)
id=seq(1, n)
pt=(id-0.5)/n
q=qchisq(pt, p)
plot(q, m, pch="*", xlab="Quantile", ylab="Ordered Squared Distance")
abline(0, 1)

result_klpga = mvn(klpga, mvnTest = "mardia", multivariatePlot = "qq")
plot(m, q, pch="*", xlab="Ordered Squared Distance", ylab="Quantile")
result_klpga
mvn(klpga, mvnTest = "mardia", multivariateOutlierMethod = "adj",  showOutliers = TRUE )
# Multivariate Outlier Detection - "adj" or "quan" 
klpga_mvn<-mvn(klpga, mvnTest = "mardia", multivariateOutlierMethod = "adj", showOutliers = TRUE, showNewData = TRUE)
mvn(klpga_mvn$newData, mvnTest="mardia")


# 참고
https://rfriend.tistory.com/53
https://cran.r-project.org/web/packages/MVN/vignettes/MVN.html






